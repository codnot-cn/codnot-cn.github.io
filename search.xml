<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>为IDEA配置LWJGL库</title>
      <link href="/posts/11/37892.html"/>
      <url>/posts/11/37892.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><ol><li>创建或打开项目<br>打开 IntelliJ IDEA 并创建一个新的 Gradle 项目，或者打开现有的 Gradle 项目。</li><li>配置 build.gradle 文件<br>在项目的 build.gradle 文件中添加 LWJGL 的依赖项。以下是一个示例配置（涵盖了大多库）：</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;java&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">project.ext.lwjglVersion = <span class="string">&quot;3.3.4&quot;</span></span><br><span class="line">project.ext.joml_primitivesVersion = <span class="string">&quot;1.10.0&quot;</span></span><br><span class="line">project.ext.jomlVersion = <span class="string">&quot;1.10.7&quot;</span></span><br><span class="line">project.ext.lwjgl3_awtVersion = <span class="string">&quot;0.1.8&quot;</span></span><br><span class="line">project.ext.steamworks4j_serverVersion = <span class="string">&quot;1.9.0&quot;</span></span><br><span class="line">project.ext.steamworks4jVersion = <span class="string">&quot;1.9.0&quot;</span></span><br><span class="line">project.ext.lwjglNatives = <span class="string">&quot;natives-windows&quot;</span></span><br><span class="line"></span><br><span class="line">group = <span class="string">&#x27;cn.codnot.trails&#x27;</span></span><br><span class="line">version = <span class="string">&#x27;1.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    testImplementation platform(<span class="string">&#x27;org.junit:junit-bom:5.10.0&#x27;</span>)</span><br><span class="line">    testImplementation <span class="string">&#x27;org.junit.jupiter:junit-jupiter&#x27;</span></span><br><span class="line">    <span class="comment">// lwjgl</span></span><br><span class="line">    implementation platform(<span class="string">&quot;org.lwjgl:lwjgl-bom:$lwjglVersion&quot;</span>)</span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-assimp&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-bgfx&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-cuda&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-egl&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-fmod&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-freetype&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-glfw&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-harfbuzz&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-hwloc&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-jawt&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-jemalloc&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-ktx&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-libdivide&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-llvm&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-lmdb&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-lz4&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-meow&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-meshoptimizer&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-msdfgen&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-nanovg&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-nfd&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-nuklear&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-odbc&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-openal&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-opencl&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-opengl&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-opengles&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-openvr&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-openxr&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-opus&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-ovr&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-par&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-remotery&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-rpmalloc&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-shaderc&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-spvc&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-sse&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-stb&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-tinyexr&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-tinyfd&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-tootle&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-vma&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-vulkan&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-xxhash&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-yoga&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjgl:lwjgl-zstd&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-assimp::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-bgfx::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-freetype::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-glfw::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-harfbuzz::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-hwloc::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-jemalloc::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-ktx::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-libdivide::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-llvm::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-lmdb::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-lz4::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-meow::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-meshoptimizer::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-msdfgen::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-nanovg::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-nfd::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-nuklear::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-openal::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-opengl::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-opengles::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-openvr::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-openxr::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-opus::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-ovr::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-par::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-remotery::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-rpmalloc::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-shaderc::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-spvc::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-sse::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-stb::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-tinyexr::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-tinyfd::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-tootle::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-vma::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-xxhash::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-yoga::$lwjglNatives&quot;</span></span><br><span class="line">    runtimeOnly <span class="string">&quot;org.lwjgl:lwjgl-zstd::$lwjglNatives&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.joml:joml-primitives:$&#123;joml_primitivesVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.joml:joml:$&#123;jomlVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.lwjglx:lwjgl3-awt:$&#123;lwjgl3_awtVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;com.code-disaster.steamworks4j:steamworks4j-server:$&#123;steamworks4j_serverVersion&#125;&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;com.code-disaster.steamworks4j:steamworks4j:$&#123;steamworks4jVersion&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test &#123;</span><br><span class="line">    useJUnitPlatform()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>同步 Gradle 项目<br>在 IntelliJ IDEA 中，点击右上角的 “Sync Now” 按钮，同步 Gradle 项目以下载所有依赖项。</li><li>编写测试代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.lwjgl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.glfw.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.opengl.*;</span><br><span class="line"><span class="keyword">import</span> org.lwjgl.system.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.Callbacks.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.glfw.GLFW.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.opengl.GL11.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryStack.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.lwjgl.system.MemoryUtil.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> window;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello LWJGL &quot;</span> + Version.getVersion() + <span class="string">&quot;!&quot;</span>);</span><br><span class="line"></span><br><span class="line">        init();</span><br><span class="line">        loop();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放窗口回调并销毁窗口</span></span><br><span class="line">        glfwFreeCallbacks(window);</span><br><span class="line">        glfwDestroyWindow(window);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 终止 GLFW 并释放错误回调</span></span><br><span class="line">        glfwTerminate();</span><br><span class="line">        Objects.requireNonNull(glfwSetErrorCallback(<span class="literal">null</span>)).free();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 设置错误回调。默认实现</span></span><br><span class="line">        <span class="comment">// 将在 System.err 中打印错误消息。</span></span><br><span class="line">        GLFWErrorCallback.createPrint(System.err).set();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化 GLFW。在执行此操作之前，大多数 GLFW 函数将不起作用。</span></span><br><span class="line">        <span class="keyword">if</span> ( !glfwInit() )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Unable to initialize GLFW&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Configure GLFW</span></span><br><span class="line">        glfwDefaultWindowHints(); <span class="comment">//optional，则当前窗口提示已经是默认的</span></span><br><span class="line">        glfwWindowHint(GLFW_VISIBLE, GLFW_TRUE); <span class="comment">// t该窗口在创建后将保持隐藏状态</span></span><br><span class="line">        glfwWindowHint(GLFW_RESIZABLE, GLFW_TRUE); <span class="comment">// 窗口将可调整大小</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建窗口</span></span><br><span class="line">        window = glfwCreateWindow(<span class="number">800</span>, <span class="number">600</span>, <span class="string">&quot;Demo!&quot;</span>, NULL, NULL);</span><br><span class="line">        <span class="keyword">if</span> ( window == NULL )</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Failed to create the GLFW window&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置按键回调。每次按下、重复或释放一个键时，都会调用它。</span></span><br><span class="line">        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> ( key == GLFW_KEY_ESCAPE &amp;&amp; action == GLFW_RELEASE )</span><br><span class="line">                glfwSetWindowShouldClose(window, <span class="literal">true</span>); <span class="comment">// 我们将在渲染循环中检测这一点</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取线程堆栈并推送新帧</span></span><br><span class="line">        <span class="keyword">try</span> ( <span class="type">MemoryStack</span> <span class="variable">stack</span> <span class="operator">=</span> stackPush() ) &#123;</span><br><span class="line">            <span class="type">IntBuffer</span> <span class="variable">pWidth</span> <span class="operator">=</span> stack.mallocInt(<span class="number">1</span>); <span class="comment">// int*</span></span><br><span class="line">            <span class="type">IntBuffer</span> <span class="variable">pHeight</span> <span class="operator">=</span> stack.mallocInt(<span class="number">1</span>); <span class="comment">// int*</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取传递给 glfwCreateWindow 的窗口大小</span></span><br><span class="line">            glfwGetWindowSize(window, pWidth, pHeight);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取主监视器的分辨率</span></span><br><span class="line">            <span class="type">GLFWVidMode</span> <span class="variable">glfwVidMode</span> <span class="operator">=</span> glfwGetVideoMode(glfwGetPrimaryMonitor());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Center the window</span></span><br><span class="line">            <span class="keyword">if</span> (glfwVidMode != <span class="literal">null</span>) &#123;</span><br><span class="line">                glfwSetWindowPos(</span><br><span class="line">                        window,</span><br><span class="line">                        (glfwVidMode.width() - pWidth.get(<span class="number">0</span>)) / <span class="number">2</span>,</span><br><span class="line">                        (glfwVidMode.height() - pHeight.get(<span class="number">0</span>)) / <span class="number">2</span></span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="comment">// 堆栈帧会自动弹出</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将 OpenGL 上下文设为当前上下文</span></span><br><span class="line">        glfwMakeContextCurrent(window);</span><br><span class="line">        <span class="comment">// Enable v-sync</span></span><br><span class="line">        glfwSwapInterval(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 展示窗口</span></span><br><span class="line">        glfwShowWindow(window);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 这条线路对于 LWJGL 与 GLFW 的</span></span><br><span class="line">        <span class="comment">// OpenGL 上下文，或外部管理的任何上下文。</span></span><br><span class="line">        <span class="comment">// LWJGL 检测当前线程中的当前上下文，</span></span><br><span class="line">        <span class="comment">// 创建 GLCapabilities 实例并将 OpenGL</span></span><br><span class="line">        <span class="comment">// 可供使用的绑定。</span></span><br><span class="line">        GL.createCapabilities();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置清除颜色</span></span><br><span class="line">        glClearColor(<span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 运行渲染循环，直到用户尝试关闭</span></span><br><span class="line">        <span class="comment">// 窗口或已按 ESCAPE 键。</span></span><br><span class="line">        <span class="keyword">while</span> ( !glfwWindowShouldClose(window) ) &#123;</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); <span class="comment">// 清除 framebuffer</span></span><br><span class="line"></span><br><span class="line">            glfwSwapBuffers(window); <span class="comment">//交换颜色缓冲区</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 轮询窗口事件。上面的 key callback 只会是</span></span><br><span class="line">            <span class="comment">//在此调用期间调用。</span></span><br><span class="line">            glfwPollEvents();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Main</span>().run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><p>  运行项目发现已经能够展示一个窗口了！</p>]]></content>
      
      
      <categories>
          
          <category> -LWJGL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -教程 -IDEA -LWJGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态定义粒子生命周期</title>
      <link href="/posts/11/24087.html"/>
      <url>/posts/11/24087.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="场景："><a href="#场景：" class="headerlink" title="场景："></a>场景：</h1><p>​Fabric官方自定义粒子教程生成的粒子太过单调，仅仅只是教会你自定义纹理贴图？这一点都不合理。而本教程旨在能够给粒子添加更多的属性，并且能够在游戏运行时创建含有特定数据的粒子，比如粒子的生命周期❤️！</p><h1 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h1><p>​需要的几个类（按照自己习惯取名）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CustomPtcEffect.java【自定义粒子效果（拿来传递参数的)】</span><br><span class="line">CustomPtc.java 【自定义的粒子，这个类主要拿来使用参数的】</span><br><span class="line">                 然后就是一些其它需要你注册粒子的地方。</span><br></pre></td></tr></table></figure><p>​如果你需要熟练掌握，那么你还得了解一些CODEC（序列化）的知识。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始:"></a>开始:</h1><p>​经过前面的准备，以及可以开始了🚙！</p><h3 id="一，编写主要类"><a href="#一，编写主要类" class="headerlink" title="一，编写主要类"></a>一，编写主要类</h3><h5 id="CustomPtcEffect-java"><a href="#CustomPtcEffect-java" class="headerlink" title="CustomPtcEffect.java"></a><strong>CustomPtcEffect.java</strong></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义粒子效果类，实现了ParticleEffect接口</span></span><br><span class="line"><span class="comment"> * 该类用于定义一个具有自定义生命周期的粒子效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomPtcEffect</span> <span class="keyword">implements</span> <span class="title class_">ParticleEffect</span> &#123;</span><br><span class="line">    <span class="comment">// 自定义粒子效果的PacketCodec，用于粒子效果的序列化和反序列化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> PacketCodec&lt;ByteBuf, CustomPtcEffect&gt; PACKET_CODEC = PacketCodec.of(</span><br><span class="line">            (val, buf) -&gt; &#123;</span><br><span class="line">                buf.writeInt(val.lifeTick);</span><br><span class="line">            &#125;,</span><br><span class="line">            buf -&gt; <span class="keyword">new</span> <span class="title class_">CustomPtcEffect</span>(<span class="literal">null</span>, buf.readInt())</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 粒子生命周期的Codec，用于粒子生命周期的编解码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Codec&lt;Integer&gt; TICK_CODEC = Codec.INT;</span><br><span class="line">    <span class="comment">// 粒子类型</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ParticleType&lt;CustomPtcEffect&gt; type;</span><br><span class="line">    <span class="comment">// 粒子的生命周期，以tick为单位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer lifeTick;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数，初始化自定义粒子效果</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 粒子类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lifeTick 粒子的生命周期，以tick为单位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomPtcEffect</span><span class="params">(ParticleType&lt;CustomPtcEffect&gt; type, Integer lifeTick)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.lifeTick = lifeTick;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建自定义粒子效果的MapCodec</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 粒子类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 自定义粒子效果的MapCodec</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MapCodec&lt;CustomPtcEffect&gt; <span class="title function_">createCodec</span><span class="params">(ParticleType&lt;CustomPtcEffect&gt; type)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> TICK_CODEC.&lt;CustomPtcEffect&gt;xmap(t -&gt; <span class="keyword">new</span> <span class="title class_">CustomPtcEffect</span>(type, t), ptcEffect -&gt; ptcEffect.lifeTick).fieldOf(<span class="string">&quot;tick&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建自定义粒子效果的PacketCodec</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type 粒子类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 自定义粒子效果的PacketCodec</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PacketCodec&lt;? <span class="built_in">super</span> ByteBuf, CustomPtcEffect&gt; createPacketCodec(ParticleType&lt;CustomPtcEffect&gt; type) &#123;</span><br><span class="line">        <span class="keyword">return</span> PACKET_CODEC.xmap(t -&gt; <span class="keyword">new</span> <span class="title class_">CustomPtcEffect</span>(type, t.lifeTick), ptcEffect -&gt; ptcEffect);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取粒子类型</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 粒子类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ParticleType&lt;CustomPtcEffect&gt; <span class="title function_">getType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.type;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取粒子的生命周期</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 粒子的生命周期，以tick为单位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getLifeTick</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.lifeTick;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="CustomPtc-java"><a href="#CustomPtc-java" class="headerlink" title="CustomPtc.java"></a><strong>CustomPtc.java</strong></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义粒子类，继承自SpriteBillboardParticle，用于实现特定的粒子效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomPtc</span> <span class="keyword">extends</span> <span class="title class_">SpriteBillboardParticle</span> &#123;</span><br><span class="line">    <span class="comment">// 自定义粒子效果的参数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CustomPtcEffect parameters;</span><br><span class="line">    <span class="comment">// 粒子的精灵提供者</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SpriteProvider sprite;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数，初始化自定义粒子</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientWorld 粒子所在的世界</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> d 粒子的x坐标</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e 粒子的y坐标</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f 粒子的z坐标</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parameters 自定义粒子效果的参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sprite 粒子的精灵提供者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">CustomPtc</span><span class="params">(ClientWorld clientWorld, <span class="type">double</span> d, <span class="type">double</span> e, <span class="type">double</span> f, CustomPtcEffect parameters, SpriteProvider sprite)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(clientWorld, d, e, f);</span><br><span class="line">        <span class="built_in">this</span>.parameters = parameters;</span><br><span class="line">        <span class="built_in">this</span>.sprite = sprite;</span><br><span class="line">        <span class="comment">// 设置粒子的最大存活时间</span></span><br><span class="line">        <span class="built_in">this</span>.setMaxAge(parameters.getLifeTick());</span><br><span class="line">        <span class="comment">// 设置粒子的精灵</span></span><br><span class="line">        <span class="built_in">this</span>.setSprite(sprite);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取粒子纹理图的类型</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 粒子纹理图的类型为不透明类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ParticleTextureSheet <span class="title function_">getType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ParticleTextureSheet.PARTICLE_SHEET_OPAQUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 粒子工厂类，用于创建自定义粒子</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Environment(EnvType.CLIENT)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Factory</span> <span class="keyword">implements</span> <span class="title class_">ParticleFactory</span>&lt;CustomPtcEffect&gt; &#123;</span><br><span class="line">        <span class="comment">// 粒子的精灵提供者</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> SpriteProvider spriteProvider;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 构造函数，初始化粒子工厂</span></span><br><span class="line"><span class="comment">         * </span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> spriteProvider 粒子的精灵提供者</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Factory</span><span class="params">(SpriteProvider spriteProvider)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.spriteProvider = spriteProvider;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建自定义粒子</span></span><br><span class="line"><span class="comment">         * </span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> effect 粒子效果的参数</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> clientWorld 粒子所在的世界</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> d 粒子的x坐标</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> e 粒子的y坐标</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> f 粒子的z坐标</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> g 粒子的x轴速度</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> h 粒子的y轴速度</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> i 粒子的z轴速度</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> 创建的自定义粒子实例</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> Particle <span class="title function_">createParticle</span><span class="params">(CustomPtcEffect effect, ClientWorld clientWorld, <span class="type">double</span> d, <span class="type">double</span> e, <span class="type">double</span> f, <span class="type">double</span> g, <span class="type">double</span> h, <span class="type">double</span> i)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CustomPtc</span>(clientWorld, d, e, f, effect, <span class="built_in">this</span>.spriteProvider);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二，注册："><a href="#二，注册：" class="headerlink" title="二，注册："></a>二，注册：</h3><p>​刚才已经完成了类的编写，那么现在来注册这它们吧！</p><h5 id="1，注册服务端粒子效果类"><a href="#1，注册服务端粒子效果类" class="headerlink" title="1，注册服务端粒子效果类"></a>1，注册服务端粒子效果类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 服务端注册效果类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ParticleType&lt;CustomPtcEffect&gt; CUSTOM_PTC_EFFECT = register(<span class="string">&quot;custom_ptc_effect&quot;</span>, <span class="literal">true</span>, CustomPtcEffect::createCodec, CustomPtcEffect::createPacketCodec);</span><br><span class="line"><span class="comment">// 下面这段代码来自原版</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">ParticleEffect</span>&gt; ParticleType&lt;T&gt; <span class="title function_">register</span><span class="params">(</span></span><br><span class="line"><span class="params">String name,</span></span><br><span class="line"><span class="params"><span class="type">boolean</span> alwaysShow,</span></span><br><span class="line"><span class="params">Function&lt;ParticleType&lt;T&gt;, MapCodec&lt;T&gt;&gt; codecGetter,</span></span><br><span class="line"><span class="params">Function&lt;ParticleType&lt;T&gt;, PacketCodec&lt;? <span class="built_in">super</span> RegistryByteBuf, T&gt;&gt; packetCodecGetter</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> Registry.register(Registries.PARTICLE_TYPE, Identifier.of(MOD_ID,name), <span class="keyword">new</span> <span class="title class_">ParticleType</span>&lt;T&gt;(alwaysShow) &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> MapCodec&lt;T&gt; <span class="title function_">getCodec</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> codecGetter.apply(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PacketCodec&lt;? <span class="built_in">super</span> RegistryByteBuf, T&gt; getPacketCodec() &#123;</span><br><span class="line"><span class="keyword">return</span> packetCodecGetter.apply(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2，注册客户端粒子类"><a href="#2，注册客户端粒子类" class="headerlink" title="2，注册客户端粒子类"></a>2，注册客户端粒子类</h5><p>​这里很简单！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ParticleFactoryRegistry.getInstance().register(TrParticle.CUSTOM_PTC_EFFECT, CustomPtc.Factory::<span class="keyword">new</span>);</span><br></pre></td></tr></table></figure><h3 id="三，提示（使用）："><a href="#三，提示（使用）：" class="headerlink" title="三，提示（使用）："></a>三，提示（使用）：</h3><p>​该方法注册的粒子<em><strong>不能通过指令生成</strong></em>，只能在代码里面生成，就像这样⬇️：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">world.addParticle(<span class="keyword">new</span> <span class="title class_">CustomPtcEffect</span>(TrParticle.CUSTOM_PTC_EFFECT,<span class="number">15</span>),pos.x,pos.y,pos.z,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><em>踩坑：</em></p><!--这里值得注意的是，ClientWorld应该使用addParticle。ServerWorld使用spawnParticle-->]]></content>
      
      
      <categories>
          
          <category> 我的世界 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fabric </tag>
            
            <tag> 1.21.1 </tag>
            
            <tag> Java </tag>
            
            <tag> 粒子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始</title>
      <link href="/posts/11/36421.html"/>
      <url>/posts/11/36421.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="开始："><a href="#开始：" class="headerlink" title="开始："></a>开始：</h1><p>如题，这是我的第一篇文章，一切都将从这里开始。<br>我会在这里分享我的一些写作心得和踩过的坑，来帮助自己以及看过我日记的人。</p><h1 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h1><p>只写有用的日记！</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
